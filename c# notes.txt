.NET Notes:

.NET is a framework(4.6/Core 2.2) which gives us 
1. Base class libraries
2. Supports multiple languages
3. CLR (Common Language Runtime)
The source code gets compiled by the
 respective compilers and get converted into IL 
(MSIL - Microsoft Intermediate Language/ CIL- Common Intermediate
Language).
CLR converts the CIL/MSIL into the native code using a 
JIT compiler(Just in time Compiler).

C#/ VB/ VC++/J#/F# are the languages supported by .NET f/w

Visual studio(2019) is an IDE which provides the Integrated Development
Environment which will provide us a place to type the source code,
take care of compilation and execution

Three types of Applications:
1.Mobile Applications
2. Web Applications
3. Desktop Applications
	1. Windows Applications
	2. Console Applications

C# is a case sensitive language
Solution Explorer gives the project structure.
A solution can have multiple projects and one project can have 
many files. To set the start up file, go to project properties
and choose the .cs which you want to execute.

A namespace is a collection of Classes. It is similar to header files
in C++ and package in Java.
We can have nested namespaces. The inner namespace can be accessed 
with a . operator. 
Instead of writing firstns.secondns we can use the 'using' keyword 
to include the namespace in the rest of the application.

The datatypes in c#:
int, float, bool, string, DateTime, Object - Primitive Datatypes
we can also create our own datatypes which are called classes, struct
enums (UDTs) - User Defined Datatypes

Datatypes can be broadly classified into two types:
1. Value Type - int, float,bool,datetime, struct, enum
2. Reference Type - string, object, class, interface, delegates

converting a int to float - Implicit Conversion
Converting a float to int - Explicit Conversion

Converting a value type to a reference type - Boxing
Converting a reference type to a value type- UnBoxing

Access specifiers in .NET:

To define the visibility of the variables, methods, classes,
namespaces, structures, intefaces we need the access specifiers.
There are 6 access specifiers in .NET.
Private
private internal
Protected
proctected internal
internal - default 
Public

Default access specifier of a namespace is public
Default access specifier of a class is internal
Default access specifier of the member variables and 
member functions of a class is private

Arrays in C#:
int[] a=new int[5];

enum in c#:
The set of values that a varibale can take. We can define an enum
and set the range of values that it can accept as an input.

Class in c#:
A class is a collection of member variables and member functions 
which are encapsulated for implementing data abstraction. Generalization
concept. It is an UDT (User Defined DataType).

Data Abstraction:
Providing necessary information and hiding sensitive information
from the end user. It is implemented using the Access specifiers.

Data Encapsulation:
Binding of data and member functions into a single unit/Entity
is called Data Encapsulation. 

Structure of a class:
class classname
{
access specifier member variable name;
acess specifier member function names;
}

Object :
Instance of a class.  Specialization.

Constructor:
A constructor is a special method which has the same name of 
the class and is used to initialize the member variables
It is automatically invoked when we instantiate the class.
A constructor cannot have a return type as its primary function
is to initialize the values of the member variables.
A constructor has to be public as it is called outside the class.

Overloading of constructor is used to initialize different set
of member variables of different objects.

Shape
Accept()
CalculateArea()
Display()

Triangle:Shape
Accept()
CalculateArea()
Display()
get()
CalculateArea()
show()

Overriding - Redefining the base class methods in the derived class

Virtual methods are the methods with definition in the base class 
and allowing the derived class to override them.

Abstract methods are the methods which do not have definition. 
The class which has even one abstract method needs to be declared as
abstract class.

An abstract class can contain both abstract and non abstract methods.
An abstract class cannot be instantiated.
An abstract class has to be inherited.

.NET does not support multiple inheritance
Employee:A,B

Multi level inheritance is allowed in .NET
Employee
PermenantEmp:Employee
senioremp:PermenantEmp

Interface
is a collection of abstract methods.The Implementation cannot be
a part of an interface.

Exceptions:
1. Syntax error
2. Logical error
3. Runtime error - exception

Exception handling:
1. try block
2. Catch handler
3. Finally block

try block - write those set of statements which might cause an
exception
catch is a handler which is a must to handle exceptions. There 
can be multiple catch blocks. A try block has to be followed by
a catch or finally block.
Finally block contains those set of statements which will be 
executed irrespective of the exceptions occur or not.
Exception class should be the last exception handled.


Collections:
Array is a collection of similar datatypes stored in a contigous 
memory location.
ArrayList is a collection of dissimilar datatypes 

Generic is datatype specific

Properties: 

In order to access the private member variables outside the class
we use properties. Two keywords help us to achieve this.
get{} - Accessor
set{} - Mutator

Delegates: 
pointer is a variable which can point to the memory location.
int i=5;
int *p=&i;
A Delegate is a function pointer.

Syntax of Delegate Declaration:

access-specifiers delegate returntype fnname(arguments);
public delegate void del1(int x)

Multicast Delegate: With a single instance of a delegate when we point
to multiple methods.

XML:
Extensible Mark up Language. 
Is XML and HTML the same 
HTML - Presentation 
XML - Storage
WE can create our own tags in XML.
The data is written in a plain text format which will not have
any syntax of any language.

JSON - Javascript object Notation
csv files- comma separated files

firststudent{name,marks,id}
secondstudent{age, gender}
thirdstudent{address}

Assemblies:
Single deployable unit of a project.
can be of two types:
dll - dynamic link library 
exe - executable file
Dlls do not have a memory of its own and it needs a host
environment to execute itself which is the exe.

LINQ:


Structured Query Language

select columnnames
from tablename 
where condition

Language Integrated Query
2 syntax :
1. Query Syntax
2. Method Syntax

from i in collectionname
where condition
select i




















































































































